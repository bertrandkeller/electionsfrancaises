
{{- $communes := $.Site.Data.regionales2021 -}}
{{- $departement := slice "01" -}}
{{- $.Scratch.Set "index" 0 -}}

{{- range $index, $r := $communes -}}
{{- $code := .code_insee -}}
{{- $commune := .commune -}}
{{- warnf "---------" -}}
{{- if not ($.Scratch.Get (printf "%s-%s" .commune $code)) -}}
  {{- warnf "#%s - %s - %s - %s" (string $index) $code $commune (string ($.Scratch.Get "index")) -}}
  {{- $.Scratch.SetInMap (printf "%s-%s" .commune $code) "commune" .commune -}}
  {{- $.Scratch.SetInMap (printf "%s-%s" .commune $code) "abstentions" .abstentions -}}
  {{- $.Scratch.SetInMap (printf "%s-%s" .commune $code) "votants" .votants -}}
  {{- $.Scratch.SetInMap (printf "%s-%s" .commune $code) "blancs" .blancs -}}
  {{- $.Scratch.SetInMap (printf "%s-%s" .commune $code) "code_insee" $code -}}
  {{- $.Scratch.SetInMap (printf "%s-%s" .commune $code) "Code" .Code -}}
  {{- $.Scratch.SetInMap (printf "%s-%s" .commune $code) "inscrits" .inscrits -}}
  {{- $.Scratch.Set "TotalGauche" (cond (not (index ($.Scratch.Get (printf "%s-%s" .commune $code)) "TotalGauche")) 0 (index ($.Scratch.Get (printf "%s-%s" .commune $code)) "TotalGauche")) -}}
  {{- if or (eq .codenuance "LECO") (eq .codenuance "LFI") (eq .codenuance "LUG") (eq .codenuance "LUGE") (eq .codenuance "LSOC") (eq .codenuance "LVEC") (eq .codenuance "LEXG") (eq .codenuance "LDVG") (eq .codenuance "LCOM") }}
  {{- $.Scratch.SetInMap (printf "%s-%s" .commune $code) "TotalGauche" ((add ($.Scratch.Get "TotalGauche") (float .voix))) -}}
  {{- end -}}
  {{- $.Scratch.Set "TotalDroite" (cond (not (index ($.Scratch.Get (printf "%s-%s" .commune $code)) "TotalDroite")) 0 (index ($.Scratch.Get (printf "%s-%s" .commune $code)) "TotalDroite")) -}}
  {{- if or (eq .codenuance "LREM") (eq .codenuance "LLR") (eq .codenuance "LRN") (eq .codenuance "LDVD") (eq .codenuance "LMMD") (eq .codenuance "LCMD") (eq .codenuance "LUD") (eq .codenuance "LUCD") (eq .codenuance "LDVC") }}"
  {{- $.Scratch.SetInMap (printf "%s-%s" .commune $code) "TotalDroite" ((add ($.Scratch.Get "TotalDroite") (float .voix))) -}}
  {{- end -}}
  {{- range $s := where $.Site.Data.coordonnees ".code_insee" "eq" (string $code) -}}
    {{ if and .latitude .longitude }}
    {{- $.Scratch.SetInMap (printf "%s-%s" $commune $code) "lat" .latitude -}}
    {{- $.Scratch.SetInMap (printf "%s-%s" $commune $code) "lon" .longitude -}}
    {{- warnf "Found: %s - %s - %s" .code_insee .latitude .longitude -}}
    {{- end -}}
  {{- end -}}
{{- end -}}
{{- $.Scratch.SetInMap (printf "%s-%s" .commune $code) (printf "%s" .codenuance) .voix -}}
{{- $.Scratch.Set "index" (cond (ne ($.Scratch.Get "index") $index) ($.Scratch.Add "index" 1) ($.Scratch.Get "index")) -}}
{{- $.Scratch.SetInMap "result" (printf "%s-%s" .commune $code) ($.Scratch.Get (printf "%s-%s" .commune $code)) -}}
{{- end -}}
[
{{- range ($.Scratch.Get "result") -}}
{{ . | jsonify }},
{{- end -}}
]
